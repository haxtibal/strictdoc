import os
import subprocess

import lit.formats


config.name = "StrictDoc integration tests"
config.test_format = lit.formats.ShTest("0")

current_dir = os.getcwd()

strictdoc_exec = lit_config.params['STRICTDOC_EXEC']
assert(strictdoc_exec)

strictdoc_cache_dir = lit_config.params['STRICTDOC_CACHE_DIR']
assert(strictdoc_cache_dir)

# NOTE: All substitutions work for the RUN: statements but they don't for CHECK:.
#       That's how LLVM LIT works.
config.substitutions.append(('%THIS_TEST_FOLDER', '$(basename "%S")'))

config.substitutions.append(('%strictdoc_root', current_dir))
config.substitutions.append(('%strictdoc_cache_dir', strictdoc_cache_dir))
config.substitutions.append(('%strictdoc', strictdoc_exec))

config.substitutions.append(('%cat', 'python \"{}/tests/integration/cat.py\"'.format(current_dir)))
config.substitutions.append(('%check_exists', 'python \"{}/tests/integration/check_exists.py\"'.format(current_dir)))
config.substitutions.append(('%cp', 'python \"{}/tests/integration/cp.py\"'.format(current_dir)))
config.substitutions.append(('%diff', 'diff --strip-trailing-cr'.format(current_dir)))
config.substitutions.append(('%excel_diff', 'python \"{}/tests/integration/excel_diff.py\"'.format(current_dir)))
config.substitutions.append(('%expect_exit', 'python \"{}/tests/integration/expect_exit.py\"'.format(current_dir)))
config.substitutions.append(('%html_markup_validator', 'python \"{}/tests/integration/html_markup_validator.py\"'.format(current_dir)))
config.substitutions.append(('%mkdir', 'python \"{}/tests/integration/mkdir.py\"'.format(current_dir)))
config.substitutions.append(('%rm', 'python \"{}/tests/integration/rm.py\"'.format(current_dir)))
config.substitutions.append(('%touch', 'python \"{}/tests/integration/touch.py\"'.format(current_dir)))

config.suffixes = ['.itest', '.c']

config.is_windows = lit_config.isWindows
if not lit_config.isWindows:
    config.available_features.add('PLATFORM_IS_NOT_WINDOWS')

if "TEST_HTML2PDF" in lit_config.params:
    chromedriver = lit_config.params['CHROMEDRIVER']
    assert(chromedriver)
    config.available_features.add('TEST_HTML2PDF')
    config.substitutions.append(('%chromedriver', chromedriver))
    config.name = "StrictDoc HTML2PDF integration tests"
